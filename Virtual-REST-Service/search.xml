<?xml version="1.0" encoding="UTF-8"?>
<con:restMockAction name="search" method="GET" resourcePath="/search" id="8c093457-e551-473d-b0dc-b43131db21ba" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="92956b11-db13-4f2a-90f3-f11bc6a1950bfileName">search</con:setting>
    <con:setting id="8c093457-e551-473d-b0dc-b43131db21bafileName">search</con:setting>
  </con:settings>
  <con:defaultResponse>Search Response</con:defaultResponse>
  <con:dispatchStyle>SCRIPT</con:dispatchStyle>
  <con:dispatchConfig/>
  <con:dispatchPath>import java.net.URLDecoder;
def queryString = mockRequest.getRequest().getQueryString()

String[] fields = queryString.split("&amp;");
String[] kv;

HashMap&lt;String, String> params = new HashMap&lt;String, String>()
for (int i = 0; i &lt; fields.length; ++i){
    kv = fields[i].split("=");
    if (2 == kv.length)
     params.put(kv[0], kv[1]); 
}

def sessionid = params.get("sessionid")

// check
if( !context.hasProperty( sessionid ))
 return "Invalid Session Id Fault"

def searchstring = URLDecoder.decode(params.get("searchstring"), "UTF-8")

if (searchstring == "all") 
 return "WildCard Response"
else if (searchstring == "Item 1") 
 return "Item 1 Response"
else if (searchstring == "Item 2") 
 return "Item 2 Response"
else if (searchstring == "Item 3") 
 return "Item 3 Response"
else if (searchstring == "Item 4") 
 return "Item 3 Response"
else if (searchstring == "Item 5") 
 return "Item 5 Response"
else
return "Unknown Response" 
	


return "Search Response"</con:dispatchPath>
  <con:dispatchXPath/>
  <con:parameterDispatcherRuleContainer/>
  <con:routeScript/>
  <con:response name="Search Response" id="2b422384-67e1-48b2-bc1a-118ab92e6aa5" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
  </con:response>
  <con:response name="Invalid Session Id Fault" id="c81a61e8-c7bf-4d29-8550-dcdd0039a277" httpResponseStatus="200" dataSource="">
    <con:settings/>
    <con:responseContent>{"Failed" : "Invalid Session Id"}</con:responseContent>
  </con:response>
  <con:response name="Item 1 Response" id="af478554-1f55-401b-bdf6-48d600146a33" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 1",
      "description": "One handy protocol droid. This droid is fluent in over six million forms of communication and has a lovely golden color. Built by an enthusiast. Mindwiped only once. Can be carried on your back.",
      "price": "1"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 2 Response" id="c9e071e1-bfda-44ba-8992-9ef74cfc39ef" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 2",
      "description": "Box of chocolate with several popular items. Covered in Glucose. Recommended safety distance when eating Spring Surprise, 10 feet.",
      "price": "1.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 3 Response" id="13e3cb56-92d3-4424-a9d0-630740019d43" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 3",
      "description": "One towel. Massively useful thing. Impress the strags with this amazing cloth!",
      "price": "2.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 4 Response" id="8d2fd834-5137-4e8f-9854-a97fcbe6d279" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 4",
      "description": "Ono-Sendai 7. The newest cowboy tech from Hosaka. Break the ICE with this conversation piece.",
      "price": "4.99"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Item 5 Response" id="ec75c8c1-b152-485d-9c4b-7f31614f0bef" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": {
      "id": "Item 5",
      "description": "Ready! API. All your needs for API readiness",
      "price": "499"
    }
  }
}</con:responseContent>
  </con:response>
  <con:response name="Search Fault Response" id="be18ce96-32ec-44bb-8e22-c35f40c80e22" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{"No Result" : "The search returned no items"}</con:responseContent>
  </con:response>
  <con:response name="Unknown Response" id="922ddaa0-e307-4576-9c6c-cb8231a98bdb" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{ "Client" : "Unknown Search String" }</con:responseContent>
  </con:response>
  <con:response name="WildCard Response" id="342d82db-5beb-4582-80d9-71df14712558" httpResponseStatus="200" mediaType="application/json" dataSource="">
    <con:settings/>
    <con:responseContent>{
  "result": {
    "item": [
      {
        "id": "1",
        "description": "One handy protocol droid.",
        "price": "1"
      },
      {
        "id": "2",
        "description": "Item nr 2",
        "price": "2"
      },
      {
        "id": "3",
        "description": "Item nr 3",
        "price": "3"
      },
      {
        "id": "4",
        "description": "${item4description}",
        "price": "4"
      },
      {
        "id": "5",
        "description": "Item nr 5",
        "price": "5"
      }
    ]
  }
}</con:responseContent>
  </con:response>
</con:restMockAction>
